[{'entity_name': 'kernel herding', 'entity_type': 'Method', 'entity_description': 'A technique used for sampling and approximation in Bayesian inference.', 'relationship': {'source_entity': 'kernel herding', 'target_entity': 'non-optimally weighted herding', 'description': 'Related to in terms of rate of convergence.'}}, {'entity_name': 'MMD', 'entity_type': 'Concept', 'entity_description': 'Maximum Mean Discrepancy, a measure used to compare distributions.', 'relationship': {'source_entity': 'MMD', 'target_entity': 'bqweights', 'description': 'Minimising is closely related to the sparse dictionary selection problem.'}}, {'entity_name': 'sparse dictionary selection problem', 'entity_type': 'Problem', 'entity_description': 'A problem in selecting a subset of elements from a larger set to represent data efficiently.', 'relationship': {'source_entity': 'sparse dictionary selection problem', 'target_entity': 'greedy forward selection algorithms', 'description': 'Studied in relation to the performance of these algorithms.'}}, {'entity_name': 'Sequential Bayesian Quadrature (sbq)', 'entity_type': 'Method', 'entity_description': 'A greedy method for Bayesian Quadrature.', 'relationship': {'source_entity': 'Sequential Bayesian Quadrature (sbq)', 'target_entity': 'greedy forward selection algorithms', 'description': 'Demonstrates performance in the context of Bayesian Quadrature.'}}, {'entity_name': 'sbq', 'entity_type': 'Method', 'entity_description': 'A method demonstrated to have a faster rate of convergence than O(1/N).', 'relationship': {'source_entity': 'sbq', 'target_entity': 'Herding', 'description': 'Compared in performance.'}}, {'entity_name': 'Herding', 'entity_type': 'Method', 'entity_description': 'A method for generating pseudo-samples from a distribution to match certain nonlinear moments.', 'relationship': {'source_entity': 'Herding', 'target_entity': 'Welling', 'description': 'Introduced by.'}}, {'entity_name': 'Welling', 'entity_type': 'Person', 'entity_description': 'The individual who introduced the herding method in 2009.', 'relationship': {'source_entity': 'Welling', 'target_entity': 'Herding', 'description': 'Introduced.'}}, {'entity_name': 'Maximum Mean Discrepancy', 'entity_type': 'Concept', 'entity_description': 'A concept used in selecting pseudo-samples in herding.', 'relationship': {'source_entity': 'Herding', 'target_entity': 'Maximum Mean Discrepancy', 'description': 'Relies on for selecting pseudo-samples.'}}, {'entity_name': 'kernel herding', 'entity_type': 'Method', 'entity_description': 'A technique used in statistical machine learning for sampling.', 'relationship': {'source_entity': 'kernel herding', 'target_entity': 'Bayesian quadrature', 'description': 'Is equivalent to the posterior variance in Bayesian quadrature.'}}, {'entity_name': 'Bayesian quadrature', 'entity_type': 'Method', 'entity_description': 'A method for numerical integration that uses Bayesian inference.', 'relationship': {'source_entity': 'Bayesian quadrature', 'target_entity': 'kernel herding', 'description': 'Can be viewed as a weighted version of kernel herding.'}}, {'entity_name': 'weighted herding method', 'entity_type': 'Method', 'entity_description': 'A category of methods that involve weighting in the herding process.', 'relationship': {'source_entity': 'weighted herding method', 'target_entity': 'sequential Bayesian quadrature', 'description': 'Is outperformed by sequential Bayesian quadrature.'}}, {'entity_name': 'rate of convergence', 'entity_type': 'Concept', 'entity_description': 'A measure of how quickly a sequence converges to a limit.', 'relationship': {'source_entity': 'sequential Bayesian quadrature', 'target_entity': 'rate of convergence', 'description': 'Achieves a rate of convergence faster than O(1=N).'}}, {'entity_name': 'empirical error', 'entity_type': 'Concept', 'entity_description': 'The difference between the estimated and true values in statistical estimation.', 'relationship': {'source_entity': 'Bayesian quadrature', 'target_entity': 'empirical error', 'description': 'Has an upper bound implied by the results.'}}, {'entity_name': 'statistical machine learning', 'entity_type': 'Field', 'entity_description': 'A field of study that focuses on the development of algorithms that can learn from and make predictions on data.', 'relationship': {'source_entity': 'statistical machine learning', 'target_entity': 'expectations', 'description': 'Involves computing expectations as a common problem.'}}, {'entity_name': 'Bayesian quadrature', 'entity_type': 'Method', 'entity_description': 'A method for estimating integrals by inferring a posterior distribution over a function based on observed evaluations.', 'relationship': {'source_entity': 'Bayesian quadrature', 'target_entity': 'posterior distribution', 'description': 'Estimates integral by inferring.'}}, {'entity_name': 'posterior distribution', 'entity_type': 'Statistical concept', 'entity_description': 'A distribution that represents the updated beliefs about a function after observing data.', 'relationship': {'source_entity': 'posterior distribution', 'target_entity': 'evaluations', 'description': 'Conditioned on observed evaluations.'}}, {'entity_name': 'Bayesian experimental design', 'entity_type': 'Method', 'entity_description': 'A deterministic procedure for selecting sample locations based on Bayesian principles.', 'relationship': {'source_entity': 'Bayesian experimental design', 'target_entity': 'sample locations', 'description': 'Provides a procedure for selecting.'}}, {'entity_name': 'Herding', 'entity_type': 'Method', 'entity_description': 'A technique that produces pseudosamples by minimizing the discrepancy of moments between a sample set and a target distribution.', 'relationship': {'source_entity': 'Herding', 'target_entity': 'pseudosamples', 'description': 'Produces by minimizing discrepancy.'}}, {'entity_name': 'Chen et al.', 'entity_type': 'Research group', 'entity_description': 'A group of researchers who proposed the herding technique.', 'relationship': {'source_entity': 'Chen et al.', 'target_entity': 'Herding', 'description': 'Proposed the herding technique.'}}, {'entity_name': 'Monte Carlo', 'entity_type': 'Method', 'entity_description': 'A traditional statistical method used for numerical integration and probabilistic simulations.', 'relationship': {'source_entity': 'Monte Carlo', 'target_entity': 'Herding', 'description': 'Similar to traditional Monte Carlo.'}}, {'entity_name': 'kernel herding', 'entity_type': 'Algorithm', 'entity_description': 'A method used for sampling from a target distribution by selecting points that minimize the discrepancy between the empirical and target distributions.', 'relationship': {'source_entity': 'kernel herding', 'target_entity': 'Bayesian quadrature', 'description': 'Related algorithms that share similar principles in sampling and integration.'}}, {'entity_name': 'Bayesian quadrature', 'entity_type': 'Algorithm', 'entity_description': 'A numerical integration technique that uses Bayesian methods to estimate integrals.', 'relationship': {'source_entity': 'Bayesian quadrature', 'target_entity': 'kernel herding', 'description': 'Related algorithms that share similar principles in sampling and integration.'}}, {'entity_name': 'Song et al., 2008', 'entity_type': 'Publication', 'entity_description': 'A research paper that discusses analytical integration methods relevant to kernel herding.', 'relationship': {'source_entity': 'Song et al., 2008', 'target_entity': 'kernel herding', 'description': 'Provides analytical methods that can be applied to kernel herding.'}}, {'entity_name': 'Chen et al., 2010', 'entity_type': 'Publication', 'entity_description': 'A research paper that discusses analytical integration methods relevant to kernel herding.', 'relationship': {'source_entity': 'Chen et al., 2010', 'target_entity': 'kernel herding', 'description': 'Provides analytical methods that can be applied to kernel herding.'}}, {'entity_name': 'herding procedure', 'entity_type': 'Process', 'entity_description': 'A method that greedily minimizes its objective by adding pseudosamples one at a time.', 'relationship': {'source_entity': 'herding procedure', 'target_entity': 'pseudosamples', 'description': 'Adds pseudosamples to minimize its objective.'}}, {'entity_name': 'pseudosamples', 'entity_type': 'Sample', 'entity_description': 'Artificial samples added during the herding procedure.', 'relationship': {'source_entity': 'pseudosamples', 'target_entity': 'target distribution', 'description': 'Encourages sampling in areas with high mass under the target distribution.'}}, {'entity_name': 'target distribution', 'entity_type': 'Distribution', 'entity_description': 'The distribution from which samples are drawn.', 'relationship': {'source_entity': 'target distribution', 'target_entity': 'existing samples', 'description': 'Discourages sampling at points close to existing samples.'}}, {'entity_name': 'k(x; y)', 'entity_type': 'Function', 'entity_description': 'A function used in the herding procedure to measure similarity between samples.', 'relationship': {'source_entity': 'k(x; y)', 'target_entity': 'p(x)', 'description': 'Used in the calculation of the herding objective.'}}, {'entity_name': 'p(x)', 'entity_type': 'Function', 'entity_description': 'The probability density function of the target distribution.', 'relationship': {'source_entity': 'p(x)', 'target_entity': 'k(x; x0)', 'description': 'Influences the sampling strategy in the herding procedure.'}}, {'entity_name': 'Maximum Mean Discrepancy', 'entity_type': 'Concept', 'entity_description': 'A statistical measure that quantifies the divergence between two probability distributions.', 'relationship': {'source_entity': 'Maximum Mean Discrepancy', 'target_entity': 'p', 'description': 'Measures divergence with respect to distribution p.'}}, {'entity_name': 'Maximum Mean Discrepancy', 'entity_type': 'Concept', 'entity_description': 'A statistical measure that quantifies the divergence between two probability distributions.', 'relationship': {'source_entity': 'Maximum Mean Discrepancy', 'target_entity': 'q', 'description': 'Measures divergence with respect to distribution q.'}}, {'entity_name': 'F', 'entity_type': 'Set of Functions', 'entity_description': 'A class of integrand functions used in the calculation of MMD.', 'relationship': {'source_entity': 'F', 'target_entity': 'Maximum Mean Discrepancy', 'description': 'Provides the functions used to measure divergence in MMD.'}}, {'entity_name': 'Sriperumbudur et al.', 'entity_type': 'Author', 'entity_description': 'Researchers who contributed to the development of the Maximum Mean Discrepancy concept.', 'relationship': {'source_entity': 'Sriperumbudur et al.', 'target_entity': 'Maximum Mean Discrepancy', 'description': 'Developed the concept of Maximum Mean Discrepancy.'}}, {'entity_name': 'Markov chain Monte Carlo', 'entity_type': 'Method', 'entity_description': 'A class of algorithms for sampling from probability distributions based on constructing a Markov chain.', 'relationship': {'source_entity': 'Markov chain Monte Carlo', 'target_entity': 'MCMC methods', 'description': 'Is a type of'}}, {'entity_name': 'MCMC methods', 'entity_type': 'Method', 'entity_description': 'Methods that can be applied to almost any problem for sampling.', 'relationship': {'source_entity': 'MCMC methods', 'target_entity': 'convergence of the estimate', 'description': 'Depends on'}}, {'entity_name': 'convergence of the estimate', 'entity_type': 'Concept', 'entity_description': 'The process of approaching a limit or a value in estimation.', 'relationship': {'source_entity': 'convergence of the estimate', 'target_entity': 'several factors', 'description': 'Depends on'}}, {'entity_name': 'quasi-Monte Carlo methods', 'entity_type': 'Method', 'entity_description': 'Methods that produce a set of pseudo-samples in a deterministic fashion instead of sampling randomly.', 'relationship': {'source_entity': 'quasi-Monte Carlo methods', 'target_entity': 'discrepancy', 'description': 'Minimise some sort of'}}, {'entity_name': 'discrepancy', 'entity_type': 'Concept', 'entity_description': 'A measure of the difference between two sets of data or distributions.', 'relationship': {'source_entity': 'discrepancy', 'target_entity': 'pseudo-samples', 'description': 'Is related to'}}, {'entity_name': 'Monte Carlo', 'entity_type': 'Method', 'entity_description': 'A statistical method used for estimating numerical results through random sampling.', 'relationship': {'source_entity': 'Monte Carlo', 'target_entity': 'herding', 'description': 'Similar to traditional Monte Carlo.'}}, {'entity_name': 'herding', 'entity_type': 'Method', 'entity_description': 'A technique that demonstrates fast convergence rates under certain assumptions.', 'relationship': {'source_entity': 'herding', 'target_entity': 'Maximum Mean Discrepancy (MMD)', 'description': 'Uses MMD criterion to choose samples.'}}, {'entity_name': 'Maximum Mean Discrepancy (MMD)', 'entity_type': 'Criterion', 'entity_description': 'A criterion used to measure the difference between two probability distributions.', 'relationship': {'source_entity': 'Maximum Mean Discrepancy (MMD)', 'target_entity': 'integral Zf;p', 'description': 'Identical to the expected error in the estimate of the integral.'}}, {'entity_name': 'integral Zf;p', 'entity_type': 'Mathematical Expression', 'entity_description': 'An integral expression related to the estimation process.', 'relationship': {'source_entity': 'integral Zf;p', 'target_entity': 'samples', 'description': 'Samples are chosen based on the MMD criterion.'}}, {'entity_name': 'classFis', 'entity_type': 'Function', 'entity_description': 'A function class that consists of functions of unit norm from a reproducing kernel Hilbert space (RKHS).', 'relationship': {'source_entity': 'classFis', 'target_entity': 'RKHS', 'description': 'Functions of unit norm from a reproducing kernel Hilbert space.'}}, {'entity_name': 'MMD', 'entity_type': 'Statistical Measure', 'entity_description': 'Maximum Mean Discrepancy, a measure used to compare two distributions.', 'relationship': {'source_entity': 'MMD', 'target_entity': 'distributions', 'description': 'Measures the difference between two distributions.'}}, {'entity_name': 'RKHS', 'entity_type': 'Mathematical Space', 'entity_description': 'Reproducing Kernel Hilbert Space, a type of Hilbert space used in functional analysis.', 'relationship': {'source_entity': 'RKHS', 'target_entity': 'kernel', 'description': 'Associated with a kernel function used in MMD.'}}, {'entity_name': 'kernel', 'entity_type': 'Function', 'entity_description': 'A function k(x; y) used to compute the MMD between two distributions.', 'relationship': {'source_entity': 'kernel', 'target_entity': 'distributions', 'description': 'Used to express the MMD between two distributions.'}}, {'entity_name': 'p', 'entity_type': 'Probability Distribution', 'entity_description': 'A probability distribution used in the MMD calculation.', 'relationship': {'source_entity': 'p', 'target_entity': 'q', 'description': 'Compared against another probability distribution q.'}}, {'entity_name': 'q', 'entity_type': 'Probability Distribution', 'entity_description': 'Another probability distribution used in the MMD calculation.', 'relationship': {'source_entity': 'q', 'target_entity': 'p', 'description': 'Compared against another probability distribution p.'}}, {'entity_name': 'Empirical Mean', 'entity_type': 'Mathematical Concept', 'entity_description': 'The average value calculated from a set of samples, used to approximate an integral.', 'relationship': {'source_entity': 'Empirical Mean', 'target_entity': 'Integral', 'description': 'Approximates the integral by taking the empirical mean.'}}, {'entity_name': 'N', 'entity_type': 'Variable', 'entity_description': 'Represents the number of samples used in the empirical mean calculation.', 'relationship': {'source_entity': 'N', 'target_entity': 'Empirical Mean', 'description': 'Denotes the number of samples in the empirical mean.'}}, {'entity_name': 'SBQ Samples', 'entity_type': 'Sample Type', 'entity_description': 'Samples obtained from sequential Bayesian quadrature.', 'relationship': {'source_entity': 'SBQ Samples', 'target_entity': 'Herding Samples', 'description': 'Compared against herding samples for maximum mean discrepancy.'}}, {'entity_name': 'Herding Samples', 'entity_type': 'Sample Type', 'entity_description': 'Samples obtained using a herding technique.', 'relationship': {'source_entity': 'Herding Samples', 'target_entity': 'SBQ Samples', 'description': 'Compared against SBQ samples for maximum mean discrepancy.'}}, {'entity_name': 'Maximum Mean Discrepancy', 'entity_type': 'Statistical Measure', 'entity_description': 'A measure used to compare the distribution of two sets of samples.', 'relationship': {'source_entity': 'SBQ Samples', 'target_entity': 'Maximum Mean Discrepancy', 'description': 'Achieves the same maximum mean discrepancy as herding samples.'}}, {'entity_name': 'Weighted SBQ Samples', 'entity_type': 'Sample Type', 'entity_description': 'SBQ samples that are assigned weights for estimation purposes.', 'relationship': {'source_entity': 'Weighted SBQ Samples', 'target_entity': 'Herding Samples', 'description': 'Used to achieve the same maximum mean discrepancy as herding samples.'}}, {'entity_name': 'p', 'entity_type': 'Variable', 'entity_description': 'A distribution function in the context of the formula.', 'relationship': {'source_entity': 'p', 'target_entity': 'R', 'description': 'Represents the mean element associated with the distribution.'}}, {'entity_name': 'R', 'entity_type': 'Variable', 'entity_description': 'A variable representing a certain mathematical operation or constant.', 'relationship': {'source_entity': 'R', 'target_entity': 'p', 'description': 'Denotes the mean element associated with the distribution p.'}}, {'entity_name': 'Gaussian kernel', 'entity_type': 'Kernel', 'entity_description': 'A characteristic kernel used in the mapping between a distribution and its mean element.', 'relationship': {'source_entity': 'Gaussian kernel', 'target_entity': 'p', 'description': 'Used to establish a bijective mapping between a distribution and its mean element.'}}, {'entity_name': 'MMDH', 'entity_type': 'Function', 'entity_description': 'A measure of divergence between two distributions.', 'relationship': {'source_entity': 'MMDH', 'target_entity': 'p', 'description': 'Measures divergence and equals zero if and only if p equals q.'}}, {'entity_name': 'fx1;:::;xN', 'entity_type': 'Sample Set', 'entity_description': 'A set of samples used to represent a target distribution.', 'relationship': {'source_entity': 'fx1;:::;xN', 'target_entity': 'p', 'description': 'Evaluates how well the sample set represents the target distribution p.'}}, {'entity_name': 'herding', 'entity_type': 'Function', 'entity_description': 'A function that uses maximum mean discrepancy to evaluate sample sets.', 'relationship': {'source_entity': 'herding', 'target_entity': 'fx1;:::;xN', 'description': 'Evaluates the representation of the sample set.'}}, {'entity_name': 'k(x,y)', 'entity_type': 'Kernel Function', 'entity_description': 'A kernel function used in the calculations of MMD.', 'relationship': {'source_entity': 'k(x,y)', 'target_entity': 'p', 'description': 'Involved in the computation of the mean element and divergence.'}}, {'entity_name': 'BQ estimate', 'entity_type': 'Concept', 'entity_description': 'A weighted version of the herding estimate.', 'relationship': {'source_entity': 'BQ estimate', 'target_entity': 'herding estimate', 'description': 'Is a weighted version of'}}, {'entity_name': 'weights', 'entity_type': 'Concept', 'entity_description': 'Values used to weight samples in the estimation process.', 'relationship': {'source_entity': 'weights', 'target_entity': 'probability distribution', 'description': 'Are often assumed to form a'}}, {'entity_name': 'Criterion (8)', 'entity_type': 'Criterion', 'entity_description': 'A specific criterion used for evaluation in the context of algorithms.', 'relationship': {'source_entity': 'Criterion (8)', 'target_entity': 'O(n)', 'description': 'Can be evaluated in O(n) time.'}}, {'entity_name': 'kernel herding', 'entity_type': 'Algorithm', 'entity_description': 'An algorithm used to produce pseudo-samples.', 'relationship': {'source_entity': 'kernel herding', 'target_entity': 'Npseudosamples', 'description': 'Produces Npseudosamples.'}}, {'entity_name': 'MMD', 'entity_type': 'Metric', 'entity_description': 'Maximum Mean Discrepancy, a measure used in statistics.', 'relationship': {'source_entity': 'herding algorithm', 'target_entity': 'MMD', 'description': 'Reduces MMD at a rate O(1/N).'}}, {'entity_name': 'Monte Carlo samplers', 'entity_type': 'Algorithm', 'entity_description': 'A class of algorithms that rely on repeated random sampling.', 'relationship': {'source_entity': 'non-deterministic Monte Carlo samplers', 'target_entity': 'O(1pN)', 'description': 'Obtains a rate of O(1pN) compared to the herding algorithm.'}}, {'entity_name': 'Bach et al. (2012)', 'entity_type': 'Publication', 'entity_description': 'A reference to a work by Bach and colleagues published in 2012.', 'relationship': {'source_entity': 'Bach et al. (2012)', 'target_entity': 'herding algorithm', 'description': 'Points out considerations regarding the herding algorithm.'}}, {'entity_name': 'sbqsamples', 'entity_type': 'Sample', 'entity_description': 'A set of samples selected for analysis.', 'relationship': {}}, {'entity_name': 'weights', 'entity_type': 'Metric', 'entity_description': 'Values assigned to samples that indicate their importance in the analysis.', 'relationship': {'source_entity': 'sbqsamples', 'target_entity': 'weights', 'description': 'Are assigned to'}}, {'entity_name': 'Bayesian shrinkage', 'entity_type': 'Statistical Method', 'entity_description': 'A technique used to adjust sample weights based on prior information.', 'relationship': {'source_entity': 'weights', 'target_entity': 'Bayesian shrinkage', 'description': 'Is an example of'}}, {'entity_name': 'Optimally-Weighted Herding', 'entity_type': 'Method', 'entity_description': 'A method related to choosing samples that summarize a probability distribution.', 'relationship': {'source_entity': 'Optimally-Weighted Herding', 'target_entity': 'Bayesian Quadrature', 'description': 'Is a type of Bayesian Quadrature.'}}, {'entity_name': 'Ferenc Huszár', 'entity_type': 'Person', 'entity_description': 'A researcher in the Department of Engineering at Cambridge University.', 'relationship': {'source_entity': 'Ferenc Huszár', 'target_entity': 'Cambridge University', 'description': 'Works at.'}}, {'entity_name': 'David Duvenaud', 'entity_type': 'Person', 'entity_description': 'A researcher in the Department of Engineering at Cambridge University.', 'relationship': {'source_entity': 'David Duvenaud', 'target_entity': 'Cambridge University', 'description': 'Works at.'}}, {'entity_name': 'Department of Engineering', 'entity_type': 'Department', 'entity_description': 'An academic department at Cambridge University.', 'relationship': {'source_entity': 'Department of Engineering', 'target_entity': 'Cambridge University', 'description': 'Is part of.'}}, {'entity_name': 'Bayesian Quadrature', 'entity_type': 'Method', 'entity_description': 'A method for estimating integrals using Bayesian techniques.', 'relationship': {'source_entity': 'Bayesian Quadrature', 'target_entity': 'kernel herding', 'description': 'Is related to the task of choosing samples for estimating integrals.'}}, {'entity_name': 'kernel herding', 'entity_type': 'Method', 'entity_description': 'A deterministic method of choosing samples that summarize a probability distribution.', 'relationship': {'source_entity': 'kernel herding', 'target_entity': 'posterior variance', 'description': 'Minimizes the criterion equivalent to.'}}, {'entity_name': 'posterior variance', 'entity_type': 'Statistical Concept', 'entity_description': 'A measure of uncertainty in Bayesian statistics.', 'relationship': {'source_entity': 'posterior variance', 'target_entity': 'Bayesian Quadrature', 'description': 'Is used in the context of.'}}, {'entity_name': 'f(x)', 'entity_type': 'Function', 'entity_description': 'A function representing a mapping from input x to output values.', 'relationship': {}}, {'entity_name': 'k(x;X)', 'entity_type': 'Kernel Function', 'entity_description': 'A kernel function that measures similarity between input x and a set of inputs X.', 'relationship': {}}, {'entity_name': 'K', 'entity_type': 'Matrix', 'entity_description': 'A covariance matrix derived from the kernel function evaluated at the inputs X.', 'relationship': {}}, {'entity_name': 'Egp[Z]', 'entity_type': 'Expectation', 'entity_description': 'The expected value of Z under the Gaussian process prior.', 'relationship': {}}, {'entity_name': 'p(x)', 'entity_type': 'Probability Density Function', 'entity_description': 'The probability density function of the input x.', 'relationship': {}}, {'entity_name': 'f(X)', 'entity_type': 'Function Values', 'entity_description': 'The values of the function f evaluated at the inputs X.', 'relationship': {}}, {'entity_name': 'z', 'entity_type': 'Vector', 'entity_description': 'A vector representing a linear combination of observed function values.', 'relationship': {}}, {'entity_name': 'w(n)_bq', 'entity_type': 'Weight', 'entity_description': 'A weight associated with the n-th observation in the context of Gaussian process regression.', 'relationship': {}}, {'entity_name': 'xn', 'entity_type': 'Input', 'entity_description': 'An individual input from the set of inputs X.', 'relationship': {}}, {'entity_name': 'Zf;p', 'entity_type': 'Expectation', 'entity_description': 'The expected value of the product of Z and the probability density p.', 'relationship': {'source_entity': 'Egp[Z]', 'target_entity': 'Zf;p', 'description': 'Represents the expected value of Z under the Gaussian process prior.'}}, {'entity_name': 'Bayesian quadrature', 'entity_type': 'Method', 'entity_description': 'A statistical method that assigns different weights to observed function values for estimating integrals.', 'relationship': {'source_entity': 'Bayesian quadrature', 'target_entity': 'kernel herding', 'description': 'Is a weighted version of'}}, {'entity_name': 'Gaussian process prior', 'entity_type': 'Statistical model', 'entity_description': 'A probabilistic model used to define a prior distribution over functions.', 'relationship': {'source_entity': 'Gaussian process prior', 'target_entity': 'f', 'description': 'Defines a prior for the function f.'}}, {'entity_name': 'f', 'entity_type': 'Function', 'entity_description': 'The function being estimated in the integral.', 'relationship': {'source_entity': 'f', 'target_entity': 'integral Zf;p', 'description': 'Is the subject of the integral being estimated.'}}, {'entity_name': 'weights', 'entity_type': 'Parameter', 'entity_description': 'Values assigned to observed function values in Bayesian quadrature.', 'relationship': {'source_entity': 'weights', 'target_entity': 'observed function values f(x)', 'description': 'Are assigned to each of the observed function values.'}}, {'entity_name': 'Hilbert space', 'entity_type': 'Mathematical space', 'entity_description': 'A complete inner product space used in functional analysis.', 'relationship': {'source_entity': 'Hilbert space', 'target_entity': 'kernel', 'description': 'Is defined by the kernel.'}}, {'entity_name': 'minimax sense', 'entity_type': 'Optimization criterion', 'entity_description': 'A criterion used to find optimal weights in Bayesian quadrature.', 'relationship': {'source_entity': 'minimax sense', 'target_entity': 'weights', 'description': 'Is the optimality criterion for the weights.'}}, {'entity_name': 'uniformly-weighted kernel herding', 'entity_type': 'Method', 'entity_description': 'A method for sampling that assigns equal weights to observed values.', 'relationship': {'source_entity': 'Bayesian quadrature', 'target_entity': 'uniformly-weighted kernel herding', 'description': 'Dominates uniformly-weighted kernel herding.'}}, {'entity_name': 'target density', 'entity_type': 'Concept', 'entity_description': 'A statistical concept representing the probability density function of a random variable.', 'relationship': {}}, {'entity_name': 'p(x)', 'entity_type': 'Function', 'entity_description': 'A function representing the probability density at point x.', 'relationship': {}}, {'entity_name': 'Gaussian posterior distribution', 'entity_type': 'Statistical Distribution', 'entity_description': "A type of probability distribution that is derived from applying Bayes' theorem to a prior distribution and likelihood.", 'relationship': {}}, {'entity_name': 'Zf;p', 'entity_type': 'Variable', 'entity_description': 'A variable representing a latent variable in the context of Bayesian inference.', 'relationship': {}}, {'entity_name': 'Bayesian Quadrature', 'entity_type': 'Method', 'entity_description': 'A method for numerical integration that uses Bayesian inference to estimate the integral.', 'relationship': {}}, {'entity_name': 'Monte Carlo', 'entity_type': 'Method', 'entity_description': 'A statistical method that uses random sampling to obtain numerical results, often used for integration.', 'relationship': {'source_entity': 'Bayesian Quadrature', 'target_entity': 'Monte Carlo', 'description': 'Bayesian Quadrature is an alternate method to Monte Carlo.'}}, {'entity_name': 'herding', 'entity_type': 'Method', 'entity_description': 'A sampling method that aims to approximate a target distribution by iteratively adjusting samples.', 'relationship': {'source_entity': 'Bayesian Quadrature', 'target_entity': 'herding', 'description': 'Bayesian Quadrature is an alternate method to herding.'}}, {'entity_name': 'Rasmussen & Ghahramani, 2003', 'entity_type': 'Publication', 'entity_description': 'A reference to a paper proposing Bayesian Monte Carlo methods.', 'relationship': {'source_entity': 'Bayesian Quadrature', 'target_entity': 'Rasmussen & Ghahramani, 2003', 'description': 'Bayesian Quadrature is proposed in the work of Rasmussen & Ghahramani.'}}, {'entity_name': 'Bayesian Monte Carlo', 'entity_type': 'Method', 'entity_description': 'A statistical method that uses Bayesian inference to estimate integrals.', 'relationship': {'source_entity': 'Bayesian Monte Carlo', 'target_entity': 'Bayesian quadrature', 'description': 'Is also known as'}}, {'entity_name': 'Bayesian quadrature', 'entity_type': 'Method', 'entity_description': 'A method that puts a prior distribution on a function and estimates integrals by inferring a posterior distribution.', 'relationship': {'source_entity': 'Bayesian quadrature', 'target_entity': 'f', 'description': 'Estimates the integral by inferring a posterior distribution over'}}, {'entity_name': 'f', 'entity_type': 'Function', 'entity_description': 'A function whose integral is being estimated using Bayesian quadrature.', 'relationship': {'source_entity': 'f', 'target_entity': 'f(xn)', 'description': 'Evaluated at query points'}}, {'entity_name': 'f(xn)', 'entity_type': 'Function Evaluation', 'entity_description': 'The evaluations of the function f at specific query points xn.', 'relationship': {'source_entity': 'f(xn)', 'target_entity': 'posterior distribution', 'description': 'Conditions the posterior distribution on function evaluations'}}, {'entity_name': 'posterior distribution', 'entity_type': 'Statistical Distribution', 'entity_description': 'The distribution over the function f after conditioning on observations.', 'relationship': {'source_entity': 'posterior distribution', 'target_entity': 'Zf;p', 'description': 'Implied by the posterior distribution over f'}}, {'entity_name': 'Zf;p', 'entity_type': 'Variable', 'entity_description': 'A variable that is derived from the posterior distribution over f.', 'relationship': {'source_entity': 'Zf;p', 'target_entity': 'sample locations xn', 'description': 'Allows the choice of sample locations in any desired manner'}}, {'entity_name': 'Bayesian quadrature', 'entity_type': 'Method', 'entity_description': 'A deterministic sampling and integration method used for estimating integrals.', 'relationship': {'source_entity': 'Bayesian quadrature', 'target_entity': 'kernel herding', 'description': 'Explores connections between the two methods.'}}, {'entity_name': 'kernel herding', 'entity_type': 'Method', 'entity_description': 'A deterministic sampling method that focuses on selecting representative samples.', 'relationship': {'source_entity': 'kernel herding', 'target_entity': 'Bayesian quadrature', 'description': 'Explores connections between the two methods.'}}, {'entity_name': "O'Hagan", 'entity_type': 'Person', 'entity_description': 'A researcher known for contributions to Bayesian quadrature.', 'relationship': {'source_entity': "O'Hagan", 'target_entity': 'Bayesian quadrature', 'description': 'Introduced Bayesian quadrature in 1991.'}}, {'entity_name': 'Rasmussen & Ghahramani', 'entity_type': 'Persons', 'entity_description': 'Researchers who contributed to the development of Bayesian quadrature.', 'relationship': {'source_entity': 'Rasmussen & Ghahramani', 'target_entity': 'Bayesian quadrature', 'description': 'Contributed to the development of Bayesian quadrature in 2003.'}}, {'entity_name': 'Chen et al.', 'entity_type': 'Persons', 'entity_description': 'Researchers who introduced kernel herding in 2010.', 'relationship': {'source_entity': 'Chen et al.', 'target_entity': 'kernel herding', 'description': 'Introduced kernel herding in 2010.'}}, {'entity_name': 'Bach et al.', 'entity_type': 'Author', 'entity_description': 'A group of researchers who discussed convergence in infinite dimensional Hilbert spaces.', 'relationship': {'source_entity': 'Bach et al.', 'target_entity': 'fast convergence', 'description': 'Pointed out that fast convergence is not guaranteed.'}}, {'entity_name': 'infinite dimensional Hilbert spaces', 'entity_type': 'Mathematical Concept', 'entity_description': 'A type of space in which the fast convergence is not guaranteed.', 'relationship': {'source_entity': 'infinite dimensional Hilbert spaces', 'target_entity': 'RKHS', 'description': 'Corresponds to the RKHS related to the Gaussian kernel.'}}, {'entity_name': 'RKHS', 'entity_type': 'Mathematical Concept', 'entity_description': 'Reproducing Kernel Hilbert Space, associated with the Gaussian kernel.', 'relationship': {'source_entity': 'RKHS', 'target_entity': 'Gaussian kernel', 'description': 'Is associated with.'}}, {'entity_name': 'Gaussian kernel', 'entity_type': 'Mathematical Function', 'entity_description': 'A kernel function used in machine learning and statistics.', 'relationship': {'source_entity': 'Gaussian kernel', 'target_entity': 'f(x)', 'description': 'Used in the context of Bayesian Quadrature.'}}, {'entity_name': 'f(x)', 'entity_type': 'Mathematical Function', 'entity_description': 'A function that is sampled at a set of input locations.', 'relationship': {'source_entity': 'f(x)', 'target_entity': 'Gaussian process posterior distribution', 'description': 'Induces a Gaussian process posterior distribution.'}}, {'entity_name': 'Gaussian process posterior distribution', 'entity_type': 'Statistical Distribution', 'entity_description': 'A distribution that represents the uncertainty about the function f after observing data.', 'relationship': {'source_entity': 'Gaussian process posterior distribution', 'target_entity': 'target density', 'description': 'Is integrated against the target density.'}}, {'entity_name': 'target density', 'entity_type': 'Statistical Concept', 'entity_description': 'The density function that is being estimated in Bayesian Quadrature.', 'relationship': {'source_entity': 'target density', 'target_entity': 'p(x)', 'description': 'Represented as p(x).'}}, {'entity_name': 'p(x)', 'entity_type': 'Mathematical Function', 'entity_description': 'The notation for the target density in the context of Bayesian Quadrature.', 'relationship': {'source_entity': 'p(x)', 'target_entity': 'volume under', 'description': 'Related to the amount of volume under.'}}, {'entity_name': 'volume under', 'entity_type': 'Mathematical Concept', 'entity_description': 'Refers to the area under the curve in the context of probability density functions.', 'relationship': {'source_entity': 'volume under', 'target_entity': 'expected area', 'description': 'Is related to the expected area.'}}, {'entity_name': 'expected area', 'entity_type': 'Statistical Concept', 'entity_description': 'The anticipated area under the curve in Bayesian Quadrature.', 'relationship': {'source_entity': 'expected area', 'target_entity': 'posterior on Z', 'description': 'Is related to the posterior on Z.'}}, {'entity_name': 'posterior on Z', 'entity_type': 'Statistical Concept', 'entity_description': 'The posterior distribution concerning the variable Z in Bayesian analysis.', 'relationship': {'source_entity': 'posterior on Z', 'target_entity': 'Bayesian Quadrature', 'description': 'Is a part of the Bayesian Quadrature process.'}}, {'entity_name': 'bq weights', 'entity_type': 'Weights', 'entity_description': 'A representative set of weights chosen from samples representing a distribution.', 'relationship': {'source_entity': 'bq weights', 'target_entity': 'samples', 'description': 'Chosen from samples representing the distribution.'}}, {'entity_name': 'Bayesian weights', 'entity_type': 'Weights', 'entity_description': 'Weights that exhibit shrinkage when the number of samples is small.', 'relationship': {'source_entity': 'Bayesian weights', 'target_entity': 'number of samples', 'description': 'Exhibits shrinkage when the number of samples is small.'}}, {'entity_name': 'Figure 3', 'entity_type': 'Figure', 'entity_description': 'A figure showing a set of optimal weights given by bq after selecting samples.', 'relationship': {'source_entity': 'Figure 3', 'target_entity': 'bq weights', 'description': 'Shows a set of optimal weights given by bq.'}}, {'entity_name': 'Figure 4', 'entity_type': 'Figure', 'entity_description': 'A figure demonstrating the behavior of Bayesian weights.', 'relationship': {'source_entity': 'Figure 4', 'target_entity': 'Bayesian weights', 'description': 'Demonstrates that the sum of Bayesian weights exhibits shrinkage.'}}, {'entity_name': 'Integrals', 'entity_type': 'Mathematical Concept', 'entity_description': 'A fundamental concept in calculus used to compute areas under curves and expectations over probability distributions.', 'relationship': {'source_entity': 'Integrals', 'target_entity': 'statistical machine learning', 'description': 'Common problem in statistical machine learning.'}}, {'entity_name': 'statistical machine learning', 'entity_type': 'Field', 'entity_description': 'A field of study that focuses on the development of algorithms that can learn from and make predictions based on data.', 'relationship': {'source_entity': 'statistical machine learning', 'target_entity': 'expectations', 'description': 'Involves computing expectations of functions over probability distributions.'}}, {'entity_name': 'expectations', 'entity_type': 'Mathematical Concept', 'entity_description': 'The expected value of a random variable, representing the average outcome of a probabilistic event.', 'relationship': {'source_entity': 'expectations', 'target_entity': 'probability distributions', 'description': 'Computed over probability distributions.'}}, {'entity_name': 'probability distributions', 'entity_type': 'Mathematical Concept', 'entity_description': 'Functions that describe the likelihood of different outcomes in a random experiment.', 'relationship': {'source_entity': 'probability distributions', 'target_entity': 'marginal distributions', 'description': 'Used to compute marginal distributions.'}}, {'entity_name': 'marginal distributions', 'entity_type': 'Mathematical Concept', 'entity_description': 'The probability distribution of a subset of a collection of random variables.', 'relationship': {'source_entity': 'marginal distributions', 'target_entity': 'predictions', 'description': 'Involved in making predictions.'}}, {'entity_name': 'predictions', 'entity_type': 'Outcome', 'entity_description': 'Forecasts or estimates about future events based on current data.', 'relationship': {'source_entity': 'predictions', 'target_entity': 'parameters', 'description': 'Marginalizing over parameters.'}}, {'entity_name': 'Bayes risk', 'entity_type': 'Statistical Measure', 'entity_description': 'The expected loss associated with a decision rule, used in decision theory.', 'relationship': {'source_entity': 'Bayes risk', 'target_entity': 'decision problem', 'description': 'Computed in a decision problem.'}}, {'entity_name': 'Monte Carlo methods', 'entity_type': 'Computational Technique', 'entity_description': 'A class of algorithms that rely on repeated random sampling to obtain numerical results.', 'relationship': {'source_entity': 'Monte Carlo methods', 'target_entity': 'random samples', 'description': 'Produce random samples from the distribution.'}}, {'entity_name': 'random samples', 'entity_type': 'Data', 'entity_description': 'A set of observations drawn from a probability distribution.', 'relationship': {'source_entity': 'random samples', 'target_entity': 'integral approximation', 'description': 'Used to approximate the integral.'}}, {'entity_name': 'integral approximation', 'entity_type': 'Mathematical Process', 'entity_description': 'The process of estimating the value of an integral using numerical methods.', 'relationship': {'source_entity': 'integral approximation', 'target_entity': 'empirical mean', 'description': 'Approximated by taking the empirical mean.'}}, {'entity_name': 'empirical mean', 'entity_type': 'Statistical Measure', 'entity_description': 'The average of a set of observations, used as an estimate of the expected value.', 'relationship': {'source_entity': 'empirical mean', 'target_entity': 'N', 'description': 'Calculated using N random samples.'}}, {'entity_name': 'f(x1)', 'entity_type': 'Function Evaluation', 'entity_description': 'The evaluation of the function f at the point x1.', 'relationship': {'source_entity': 'f(x1)', 'target_entity': 'f(xN)', 'description': 'Part of a series of function evaluations.'}}, {'entity_name': 'f(xN)', 'entity_type': 'Function Evaluation', 'entity_description': 'The evaluation of the function f at the point xN.', 'relationship': {'source_entity': 'f(xN)', 'target_entity': 'f(X)', 'description': 'Denotes the collection of function evaluations.'}}, {'entity_name': 'Zf;p', 'entity_type': 'Variable', 'entity_description': 'A variable representing a distribution in the Bayesian solution.', 'relationship': {'source_entity': 'Zf;p', 'target_entity': 'E[Z]', 'description': 'The distribution implies the optimal Bayesian estimator.'}}, {'entity_name': 'E[Z]', 'entity_type': 'Estimator', 'entity_description': 'The mean of the distribution Zf;p, serving as the optimal Bayesian estimator.', 'relationship': {'source_entity': 'E[Z]', 'target_entity': 'squared loss', 'description': 'Minimizes the squared loss.'}}, {'entity_name': 'f', 'entity_type': 'Function', 'entity_description': 'The function being evaluated, assigned a Gaussian process prior.', 'relationship': {'source_entity': 'f', 'target_entity': 'Gaussian process prior', 'description': 'Assigned a Gaussian process prior with kernel function k.'}}, {'entity_name': 'Gaussian process prior', 'entity_type': 'Statistical Model', 'entity_description': 'A prior distribution used in Bayesian statistics, characterized by a kernel function.', 'relationship': {'source_entity': 'Gaussian process prior', 'target_entity': 'kernel function k', 'description': 'Characterized by the kernel function k.'}}, {'entity_name': 'k', 'entity_type': 'Kernel Function', 'entity_description': 'A function used in Gaussian processes to define the covariance structure.', 'relationship': {'source_entity': 'k', 'target_entity': 'mean 0', 'description': 'The mean of the Gaussian process prior is set to 0.'}}, {'entity_name': 'fx', 'entity_type': 'Data Set', 'entity_description': 'The set of input data points used for conditioning.', 'relationship': {'source_entity': 'fx', 'target_entity': 'p(f(x?)|f(X))', 'description': 'Conditioning on the data set fx leads to a posterior distribution.'}}, {'entity_name': 'p(f(x?)|f(X))', 'entity_type': 'Posterior Distribution', 'entity_description': 'The posterior distribution of f(x?) given the evaluations f(X).', 'relationship': {'source_entity': 'p(f(x?)|f(X))', 'target_entity': 'N', 'description': 'Describes the posterior as a normal distribution.'}}, {'entity_name': 'N', 'entity_type': 'Distribution', 'entity_description': 'A normal distribution representing the posterior.', 'relationship': {'source_entity': 'N', 'target_entity': 'fx?', 'description': 'Describes the distribution of the function evaluation at x?.'}}, {'entity_name': 'cov(x?;x0?)', 'entity_type': 'Covariance Function', 'entity_description': 'The covariance between the function evaluations at points x? and x0?.', 'relationship': {'source_entity': 'cov(x?;x0?)', 'target_entity': 'k(x?;x0?)', 'description': 'Defined in terms of the kernel function k.'}}]