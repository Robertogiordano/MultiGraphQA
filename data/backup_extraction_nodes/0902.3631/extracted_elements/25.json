[{'entity_name': 'two-processor message-passing system', 'entity_type': 'System', 'entity_description': 'A distributed system where two processors communicate by passing messages.', 'relationship': {'source_entity': 'two-processor message-passing system', 'target_entity': 'tile self-assembly', 'description': 'Simulates'}}, {'entity_name': 'asynchronous shared memory systems', 'entity_type': 'System', 'entity_description': 'Systems that allow multiple processors to access shared memory asynchronously.', 'relationship': {'source_entity': 'asynchronous shared memory systems', 'target_entity': 'distributed systems', 'description': 'Built on top of'}}, {'entity_name': 'distributed systems', 'entity_type': 'System', 'entity_description': 'Systems where components located on networked computers communicate and coordinate their actions by passing messages.', 'relationship': {'source_entity': 'distributed systems', 'target_entity': 'processors', 'description': 'Interact physically by passing messages'}}, {'entity_name': 'shared memory model', 'entity_type': 'Model', 'entity_description': 'A programming model that allows multiple processors to access shared memory.', 'relationship': {'source_entity': 'shared memory model', 'target_entity': 'programmer', 'description': 'Convenience for'}}, {'entity_name': 'tile assembly machinery', 'entity_type': 'Machinery', 'entity_description': 'A system used to simulate consensus objects in a distributed system.', 'relationship': {'source_entity': 'tile assembly machinery', 'target_entity': 'two-processor message-passing distributed system', 'description': 'Simulates'}}, {'entity_name': 'more powerful registers', 'entity_type': 'Concept', 'entity_description': 'Registers that are enhanced to perform more complex operations, often referred to as objects or shared objects.', 'relationship': {'source_entity': 'more powerful registers', 'target_entity': 'objects', 'description': 'Are often called'}}, {'entity_name': 'objects', 'entity_type': 'Concept', 'entity_description': 'Data structures that can encapsulate state and behavior, often used in programming.', 'relationship': {'source_entity': 'objects', 'target_entity': 'shared objects', 'description': 'Emphasize they might be a special process segment'}}, {'entity_name': 'shared objects', 'entity_type': 'Concept', 'entity_description': 'Objects that are designed to be accessed by multiple processes, often in a concurrent environment.', 'relationship': {'source_entity': 'shared objects', 'target_entity': 'wait-free n-process consensus', 'description': 'Are used to solve'}}, {'entity_name': 'wait-free n-process consensus', 'entity_type': 'Concept', 'entity_description': 'A consensus algorithm that guarantees that at least one process will complete its operation in a finite number of steps, even if others fail.', 'relationship': {'source_entity': 'wait-free n-process consensus', 'target_entity': 'asynchronous consensus algorithm', 'description': 'Exists for n processes, up to n-1 of which might fail'}}, {'entity_name': 'p1', 'entity_type': 'Processor', 'entity_description': 'One of the processors involved in message sending.', 'relationship': {'source_entity': 'p1', 'target_entity': 'p2', 'description': 'Sends messages to'}}, {'entity_name': 'p2', 'entity_type': 'Processor', 'entity_description': 'The other processor involved in message sending.', 'relationship': {'source_entity': 'p2', 'target_entity': 'p1', 'description': 'Receives messages from'}}, {'entity_name': 'wedge', 'entity_type': 'Construction', 'entity_description': 'A modified construction used to simulate processors checking their inboxes.', 'relationship': {'source_entity': 'wedge', 'target_entity': 'messages', 'description': 'Allows messages to crawl up until they reach the frontier'}}, {'entity_name': 'messages', 'entity_type': 'Communication', 'entity_description': 'Messages sent between processors.', 'relationship': {'source_entity': 'messages', 'target_entity': 'wedge', 'description': 'Bind with rows of tiles in the wedge'}}, {'entity_name': 'tiles', 'entity_type': 'Structure', 'entity_description': 'Rows of tiles in the wedge that allow message binding.', 'relationship': {'source_entity': 'tiles', 'target_entity': 'messages', 'description': 'Allow sent messages to bind with that row'}}, {'entity_name': 'O', 'entity_type': 'Consensus Object', 'entity_description': 'A maximal consensus object that solves wait-free n-process consensus.', 'relationship': {'source_entity': 'M', 'target_entity': 'O', 'description': 'M contains one n-consensus object O.'}}, {'entity_name': 'M', 'entity_type': 'Distributed System', 'entity_description': 'A distributed system with n processes.', 'relationship': {'source_entity': 'M', 'target_entity': 'n processes', 'description': 'M consists of n processes.'}}, {'entity_name': 'n processes', 'entity_type': 'Processes', 'entity_description': 'The number of processes in the distributed system M.', 'relationship': {'source_entity': 'n processes', 'target_entity': 'O', 'description': 'n processes interact with the n-consensus object O.'}}, {'entity_name': 'Configurations', 'entity_type': 'Concept', 'entity_description': 'The instantaneous state of the system in a distributed context.', 'relationship': {'source_entity': 'Configurations', 'target_entity': 'Execution Segments', 'description': 'Configurations are built up from execution segments.'}}, {'entity_name': 'Execution Segments', 'entity_type': 'Concept', 'entity_description': 'Events applied to the instantaneous state of the system.', 'relationship': {'source_entity': 'Execution Segments', 'target_entity': 'Events', 'description': 'Execution segments consist of events performed upon registers.'}}, {'entity_name': 'Events', 'entity_type': 'Concept', 'entity_description': 'Read and write invocations performed by processors.', 'relationship': {'source_entity': 'Events', 'target_entity': 'Registers', 'description': 'Events are performed upon registers by processors.'}}, {'entity_name': 'Registers', 'entity_type': 'Data Structure', 'entity_description': 'Storage used by processors in the distributed system.', 'relationship': {'source_entity': 'Registers', 'target_entity': 'Processors', 'description': 'Processors perform read and write invocations on registers.'}}, {'entity_name': 'Processors', 'entity_type': 'Components', 'entity_description': 'The entities that perform operations in the distributed system.', 'relationship': {'source_entity': 'Processors', 'target_entity': 'Configurations', 'description': 'Processors contribute to the configurations of the system.'}}, {'entity_name': 'processor one', 'entity_type': 'Processor', 'entity_description': 'The first processor in a two-processor message-passing system.', 'relationship': {'source_entity': 'processor one', 'target_entity': 'processor two', 'description': 'Sends a message to'}}, {'entity_name': 'processor two', 'entity_type': 'Processor', 'entity_description': 'The second processor in a two-processor message-passing system.', 'relationship': {'source_entity': 'processor two', 'target_entity': 'processor one', 'description': 'Receives a message from'}}, {'entity_name': 'input buffer', 'entity_type': 'Component', 'entity_description': 'A storage area for messages waiting to be processed by a processor.', 'relationship': {'source_entity': 'processor one', 'target_entity': 'input buffer', 'description': 'Uses'}}, {'entity_name': 'input buffer', 'entity_type': 'Component', 'entity_description': 'A storage area for messages waiting to be processed by a processor.', 'relationship': {'source_entity': 'processor two', 'target_entity': 'input buffer', 'description': 'Uses'}}, {'entity_name': 'seed assembly', 'entity_type': 'Structure', 'entity_description': 'The initial configuration from which the wedges grow in the simulation.', 'relationship': {'source_entity': 'seed assembly', 'target_entity': 'wedges', 'description': 'Grows into'}}, {'entity_name': 'wedges', 'entity_type': 'Structure', 'entity_description': 'The structures that grow from the seed assembly in the simulation.', 'relationship': {'source_entity': 'seed assembly', 'target_entity': 'wedges', 'description': 'Are formed from'}}, {'entity_name': 'M', 'entity_type': 'Model', 'entity_description': 'An asynchronous shared memory model used in the context of processes and decision values.', 'relationship': {'source_entity': 'M', 'target_entity': 'pi', 'description': 'Contains processes that have special state components.'}}, {'entity_name': 'pi', 'entity_type': 'Process', 'entity_description': 'A process in the model M that has input and decision value components.', 'relationship': {'source_entity': 'pi', 'target_entity': 'xi', 'description': 'Has an input component.'}}, {'entity_name': 'xi', 'entity_type': 'State Component', 'entity_description': 'The input component of process pi, which must be a member of the set V.', 'relationship': {'source_entity': 'xi', 'target_entity': 'V', 'description': 'Belongs to the set of possible decision values.'}}, {'entity_name': 'yi', 'entity_type': 'State Component', 'entity_description': 'The decision value component of process pi, which starts with a null entry and is write-once.', 'relationship': {'source_entity': 'yi', 'target_entity': 'null entry', 'description': 'Starts out containing a null entry.'}}, {'entity_name': 'V', 'entity_type': 'Set', 'entity_description': 'The set of possible decision values, which is a finite set of positive integers.', 'relationship': {'source_entity': 'V', 'target_entity': 'xi', 'description': 'Contains values that xi can take.'}}, {'entity_name': 'Consensus Problem', 'entity_type': 'Problem', 'entity_description': 'A problem that requires an algorithm to ensure that every nonfaulty process eventually writes a value to its decision component.', 'relationship': {'source_entity': 'Consensus Problem', 'target_entity': 'Termination', 'description': 'Requires termination of processes.'}}, {'entity_name': 'Termination', 'entity_type': 'Condition', 'entity_description': 'A condition that ensures every nonfaulty process eventually writes a value to its decision component.', 'relationship': {'source_entity': 'Termination', 'target_entity': 'yi', 'description': 'Ensures that yi is eventually written to by nonfaulty processes.'}}, {'entity_name': 'message', 'entity_type': 'Concept', 'entity_description': 'A unit of information that is sent and received in a communication process.', 'relationship': {'source_entity': 'message', 'target_entity': 'ack', 'description': 'Acknowledges receipt of the message.'}}, {'entity_name': 'ack', 'entity_type': 'Concept', 'entity_description': 'A character that acknowledges the receipt of a message.', 'relationship': {'source_entity': 'ack', 'target_entity': 'message', 'description': 'Indicates that the message has been received.'}}, {'entity_name': 'Figure 2', 'entity_type': 'Diagram', 'entity_description': 'A high-level schematic for the construction of the message-passing model.', 'relationship': {'source_entity': 'Figure 2', 'target_entity': 'Theorem 2', 'description': 'Illustrates the concepts discussed in Theorem 2.'}}, {'entity_name': 'Theorem 2', 'entity_type': 'Theorem', 'entity_description': 'A statement regarding the two-processor message-passing model in distributed computing.', 'relationship': {'source_entity': 'Theorem 2', 'target_entity': 'M', 'description': 'Describes properties of the message-passing model M.'}}, {'entity_name': 'M', 'entity_type': 'Model', 'entity_description': 'A two-processor message-passing model of distributed computing.', 'relationship': {'source_entity': 'M', 'target_entity': 'message', 'description': 'Utilizes messages for communication between processors.'}}, {'entity_name': 'Turing machine', 'entity_type': 'Concept', 'entity_description': 'A theoretical computational model that manipulates symbols on a tape according to a set of rules.', 'relationship': {'source_entity': 'Turing machine', 'target_entity': 'work tape', 'description': 'Uses'}}, {'entity_name': 'work tape', 'entity_type': 'Concept', 'entity_description': 'The medium on which a Turing machine operates, consisting of an infinite sequence of cells.', 'relationship': {'source_entity': 'work tape', 'target_entity': 'Turing machine head', 'description': 'Interacts with'}}, {'entity_name': 'Turing machine head', 'entity_type': 'Concept', 'entity_description': 'The component of a Turing machine that reads and writes symbols on the work tape.', 'relationship': {'source_entity': 'Turing machine head', 'target_entity': 'level', 'description': 'Moves to'}}, {'entity_name': 'level', 'entity_type': 'Concept', 'entity_description': 'A row in the wedge construction that represents the state of the Turing machine tape.', 'relationship': {'source_entity': 'level', 'target_entity': 'wedge construction', 'description': 'Forms part of'}}, {'entity_name': 'wedge construction', 'entity_type': 'Concept', 'entity_description': 'A structure that visually represents the states of a Turing machine over time.', 'relationship': {'source_entity': 'wedge construction', 'target_entity': 'Lathrop et al.', 'description': 'Extended by'}}, {'entity_name': 'Lathrop et al.', 'entity_type': 'Person', 'entity_description': 'Researchers who contributed to the development of the wedge construction in Turing machine simulations.', 'relationship': {'source_entity': 'Lathrop et al.', 'target_entity': 'simulate', 'description': 'Defined the notion of'}}, {'entity_name': 'sensus algorithm', 'entity_type': 'Algorithm', 'entity_description': 'An algorithm designed for consensus in distributed systems with n processes, where up to n-1 processes may fail.', 'relationship': {'source_entity': 'sensus algorithm', 'target_entity': 'n-processes', 'description': 'Designed for consensus among n processes.'}}, {'entity_name': 'n-processes', 'entity_type': 'Concept', 'entity_description': 'A set of processes in a distributed system that can participate in consensus.', 'relationship': {'source_entity': 'n-processes', 'target_entity': 'O', 'description': 'Can invoke the consensus object O.'}}, {'entity_name': 'O', 'entity_type': 'Consensus Object', 'entity_description': 'An object that allows processes to invoke it with a command to reach consensus.', 'relationship': {'source_entity': 'O', 'target_entity': 'invoke(O,v)', 'description': 'Can be invoked with a command to propose a decision value.'}}, {'entity_name': 'invoke(O,v)', 'entity_type': 'Command', 'entity_description': 'A command used by processes to propose a decision value v to the consensus object O.', 'relationship': {'source_entity': 'invoke(O,v)', 'target_entity': 'return(O,vout)', 'description': 'Results in a return command from O with a decision value.'}}, {'entity_name': 'return(O,vout)', 'entity_type': 'Command', 'entity_description': 'A command from the consensus object O that returns a decision value vout to the invoking processes.', 'relationship': {'source_entity': 'return(O,vout)', 'target_entity': 'O', 'description': 'Is a response from the consensus object O.'}}, {'entity_name': 'v', 'entity_type': 'Value', 'entity_description': 'A possible decision value proposed by a process.', 'relationship': {'source_entity': 'v', 'target_entity': 'vout', 'description': 'Can be returned as a decision value by the consensus object.'}}, {'entity_name': 'vout', 'entity_type': 'Value', 'entity_description': 'A possible decision value returned by the consensus object O.', 'relationship': {'source_entity': 'vout', 'target_entity': 'O', 'description': 'Is the value returned by the consensus object O to all invoking processes.'}}, {'entity_name': 'wait-free n-process consensus', 'entity_type': 'Concept', 'entity_description': 'A property of the consensus object O that ensures it can solve consensus without waiting for any processes.', 'relationship': {'source_entity': 'O', 'target_entity': 'wait-free n-process consensus', 'description': 'O is an n-consensus object if it solves wait-free n-process consensus.'}}, {'entity_name': 'M', 'entity_type': 'Distributed System', 'entity_description': 'A system consisting of multiple processes that can communicate and coordinate with each other.', 'relationship': {'source_entity': 'M', 'target_entity': 'O', 'description': 'Contains a consensus object.'}}, {'entity_name': 'n', 'entity_type': 'Integer', 'entity_description': 'The number of processes in the distributed system.', 'relationship': {'source_entity': 'M', 'target_entity': 'O', 'description': 'Defines the number of processes that can participate in consensus.'}}, {'entity_name': 'O', 'entity_type': 'n-consensus Object', 'entity_description': 'An object that facilitates consensus among processes in the distributed system.', 'relationship': {'source_entity': 'O', 'target_entity': 'M', 'description': 'Is part of the distributed system.'}}, {'entity_name': 'qi', 'entity_type': 'State', 'entity_description': 'A state of process pi in the distributed system.', 'relationship': {'source_entity': 'qi', 'target_entity': 'M', 'description': 'Represents the state of a process in the distributed system.'}}, {'entity_name': 'C', 'entity_type': 'Configuration', 'entity_description': 'A configuration of the distributed system represented as an (n+1)-tuple.', 'relationship': {'source_entity': 'C', 'target_entity': 'M', 'description': 'Describes the state of the distributed system.'}}, {'entity_name': 'event', 'entity_type': 'Event', 'entity_description': 'An occurrence that can affect the state of the distributed system, such as computation steps or crashes.', 'relationship': {'source_entity': 'event', 'target_entity': 'M', 'description': 'Represents actions or occurrences within the distributed system.'}}, {'entity_name': 'C0, C1, C2', 'entity_type': 'Configuration Sequence', 'entity_description': 'A sequence of configurations representing legal execution segments in the distributed system.', 'relationship': {'source_entity': 'C0, C1, C2', 'target_entity': 'M', 'description': 'Illustrates the progression of states in the distributed system.'}}, {'entity_name': 'Tile Assembly Model', 'entity_type': 'Model', 'entity_description': 'A computational model that is Turing Universal and can simulate a Turing Machine.', 'relationship': {'source_entity': 'Tile Assembly Model', 'target_entity': 'Turing Machine', 'description': 'Can simulate'}}, {'entity_name': 'Turing Machine', 'entity_type': 'Computational Model', 'entity_description': 'A theoretical machine that manipulates symbols on a strip of tape according to a set of rules.', 'relationship': {'source_entity': 'Turing Machine', 'target_entity': 'Tile Assembly Model', 'description': 'Is simulated by'}}, {'entity_name': 'p1', 'entity_type': 'Processor', 'entity_description': 'A processor that may send or receive messages.', 'relationship': {'source_entity': 'p1', 'target_entity': 'p2', 'description': 'May send messages to'}}, {'entity_name': 'p2', 'entity_type': 'Processor', 'entity_description': 'A processor that may send or receive messages.', 'relationship': {'source_entity': 'p2', 'target_entity': 'p1', 'description': 'May receive messages from'}}, {'entity_name': 'T1', 'entity_type': 'Tile Assembly System', 'entity_description': 'A tile assembly system that simulates processor p1.', 'relationship': {'source_entity': 'T1', 'target_entity': 'T', 'description': 'Grows from a seed in one direction'}}, {'entity_name': 'T2', 'entity_type': 'Tile Assembly System', 'entity_description': 'A tile assembly system that simulates processor p2.', 'relationship': {'source_entity': 'T2', 'target_entity': 'T', 'description': 'Grows from a seed in another direction'}}, {'entity_name': 'T', 'entity_type': 'Tile Assembly System', 'entity_description': 'A tile assembly system constructed from T1 and T2.', 'relationship': {'source_entity': 'T', 'target_entity': 'T1', 'description': 'Contains T1 that grows in one direction'}}, {'entity_name': 'T', 'entity_type': 'Tile Assembly System', 'entity_description': 'A tile assembly system constructed from T1 and T2.', 'relationship': {'source_entity': 'T', 'target_entity': 'T2', 'description': 'Contains T2 that grows in another direction'}}, {'entity_name': 'Tile Assembly Model', 'entity_type': 'Model', 'entity_description': 'A theoretical framework for simulating the assembly of tiles to send messages between processors.', 'relationship': {'source_entity': 'Tile Assembly Model', 'target_entity': 'processor 1', 'description': 'Simulates sending messages to.'}}, {'entity_name': 'processor 1', 'entity_type': 'Processor', 'entity_description': 'One of the processors involved in the message-sending simulation.', 'relationship': {'source_entity': 'processor 1', 'target_entity': 'processor 2', 'description': 'Receives messages from.'}}, {'entity_name': 'processor 2', 'entity_type': 'Processor', 'entity_description': 'The second processor involved in the message-sending simulation.', 'relationship': {'source_entity': 'processor 2', 'target_entity': 'processor 1', 'description': 'Sends messages to.'}}, {'entity_name': 'k-many messages', 'entity_type': 'Message', 'entity_description': 'A finite number of messages that are encoded with unique tiles.', 'relationship': {'source_entity': 'k-many messages', 'target_entity': 'tiles', 'description': 'Encoded with unique tiles.'}}, {'entity_name': 'tiles', 'entity_type': 'Tile', 'entity_description': 'Units used in the Tile Assembly Model to simulate message sending.', 'relationship': {'source_entity': 'tiles', 'target_entity': 'Tile Assembly Model', 'description': 'Used in the assembly process of.'}}, {'entity_name': 'nonfaulty process', 'entity_type': 'Process', 'entity_description': 'A process that does not fail and can participate in consensus.', 'relationship': {'source_entity': 'nonfaulty process', 'target_entity': 'yi', 'description': 'Writes a value to.'}}, {'entity_name': 'pi', 'entity_type': 'Process', 'entity_description': 'A specific nonfaulty process involved in the consensus.', 'relationship': {'source_entity': 'pi', 'target_entity': 'yi', 'description': 'Writes a value to.'}}, {'entity_name': 'pj', 'entity_type': 'Process', 'entity_description': 'Another specific nonfaulty process involved in the consensus.', 'relationship': {'source_entity': 'pj', 'target_entity': 'yj', 'description': 'Writes a value to.'}}, {'entity_name': 'yi', 'entity_type': 'Value', 'entity_description': 'The decision value written by nonfaulty processes.', 'relationship': {'source_entity': 'pi', 'target_entity': 'pj', 'description': 'If both are nonfaulty and write to yi and yj, then yi equals yj.'}}, {'entity_name': 'yj', 'entity_type': 'Value', 'entity_description': 'Another decision value written by nonfaulty processes.', 'relationship': {'source_entity': 'pj', 'target_entity': 'yi', 'description': 'If both are nonfaulty and write to yi and yj, then yi equals yj.'}}, {'entity_name': 'xj', 'entity_type': 'Input Value', 'entity_description': 'The input value for some process or process pj.', 'relationship': {'source_entity': 'pi', 'target_entity': 'yi', 'description': 'The value written by pi must be the input value xj for some process or pj.'}}, {'entity_name': 'fault-tolerant consensus', 'entity_type': 'Concept', 'entity_description': 'A consensus algorithm that can tolerate one or more process failures.', 'relationship': {'source_entity': 'fault-tolerant consensus', 'target_entity': 'crash failure', 'description': 'Considers crash failure as the only type of failure.'}}, {'entity_name': 'crash failure', 'entity_type': 'Failure Type', 'entity_description': 'A type of failure where a process ceases operation and never takes another step.', 'relationship': {'source_entity': 'crash failure', 'target_entity': 'process', 'description': 'A process can experience this type of failure.'}}, {'entity_name': 'assembly machinery', 'entity_type': 'System', 'entity_description': 'A system used to simulate a two-processor message-passing distributed system.', 'relationship': {'source_entity': 'assembly machinery', 'target_entity': 'two-processor message-passing distributed system', 'description': 'Simulates'}}, {'entity_name': 'two-processor message-passing distributed system', 'entity_type': 'System', 'entity_description': 'A distributed system that uses message passing between two processors.', 'relationship': {'source_entity': 'two-processor message-passing distributed system', 'target_entity': 'shared 2-consensus object', 'description': 'Modified to simulate'}}, {'entity_name': 'Winfree', 'entity_type': 'Person', 'entity_description': 'A researcher who demonstrated how to simulate the behavior of a Turing machine.', 'relationship': {'source_entity': 'Winfree', 'target_entity': 'Turing machine', 'description': 'Showed how to simulate'}}, {'entity_name': 'Turing machine', 'entity_type': 'Computational Model', 'entity_description': 'A theoretical model of computation that defines an abstract machine.', 'relationship': {'source_entity': 'Turing machine', 'target_entity': 'tile assembly', 'description': 'Simulated by means of a wedge construction in'}}, {'entity_name': 'tile assembly', 'entity_type': 'System', 'entity_description': 'A system that grows level by level to simulate computational processes.', 'relationship': {'source_entity': 'tile assembly', 'target_entity': 'initial input', 'description': 'Simulates the initial input through the seed tile'}}, {'entity_name': 'initial input', 'entity_type': 'Data', 'entity_description': 'The starting data for the Turing machine simulation.', 'relationship': {'source_entity': 'initial input', 'target_entity': 'level', 'description': 'Simulated by the seed tile'}}, {'entity_name': 'level', 'entity_type': 'Concept', 'entity_description': 'A stage in the tile assembly process that simulates a step of Turing machine execution.', 'relationship': {'source_entity': 'level', 'target_entity': 'Output', 'description': 'Expands to simulate the output'}}, {'entity_name': 'tile assembly system', 'entity_type': 'System', 'entity_description': 'A computational model that uses tiles to simulate configurations and behaviors of distributed systems.', 'relationship': {'source_entity': 'tile assembly system', 'target_entity': 'distributed system', 'description': 'Simulates the behavior of.'}}, {'entity_name': 'distributed system', 'entity_type': 'System', 'entity_description': 'A system composed of multiple components that communicate and coordinate to achieve a common goal.', 'relationship': {'source_entity': 'distributed system', 'target_entity': 'tile assembly system', 'description': 'Is modeled by the behavior of.'}}, {'entity_name': 'configuration', 'entity_type': 'Concept', 'entity_description': 'A specific arrangement or state of a system at a given time.', 'relationship': {'source_entity': 'configuration', 'target_entity': 'distributed system', 'description': 'Represents a state of.'}}, {'entity_name': 'halting configuration', 'entity_type': 'Concept', 'entity_description': 'A state in which a system has completed its operation and cannot proceed further.', 'relationship': {'source_entity': 'halting configuration', 'target_entity': 'tile assembly system', 'description': 'Indicates when the system halts.'}}, {'entity_name': 'process', 'entity_type': 'Concept', 'entity_description': 'A sequence of operations that can cease operation.', 'relationship': {'source_entity': 'process', 'target_entity': 'operation', 'description': 'Ceases operation.'}}, {'entity_name': 'distributed computing', 'entity_type': 'Field', 'entity_description': 'A field of computer science that deals with distributed systems.', 'relationship': {'source_entity': 'distributed computing', 'target_entity': 'consensus problem', 'description': 'Involves the consensus problem.'}}, {'entity_name': 'consensus problem', 'entity_type': 'Problem', 'entity_description': 'A problem in distributed computing regarding agreement among processes.', 'relationship': {'source_entity': 'consensus problem', 'target_entity': 'asynchronous shared memory model', 'description': 'Cannot be solved in an asynchronous shared memory model.'}}, {'entity_name': 'asynchronous shared memory model', 'entity_type': 'Model', 'entity_description': 'A model of computation where processes operate independently and communicate through shared memory.', 'relationship': {'source_entity': 'asynchronous shared memory model', 'target_entity': 'crash failure', 'description': 'Can be affected by crash failures.'}}, {'entity_name': 'crash failure', 'entity_type': 'Failure', 'entity_description': 'A type of failure where a process stops functioning.', 'relationship': {'source_entity': 'crash failure', 'target_entity': 'deterministic algorithm', 'description': 'Prevents the existence of a deterministic algorithm.'}}, {'entity_name': 'deterministic algorithm', 'entity_type': 'Algorithm', 'entity_description': 'An algorithm that produces the same output for a given input every time.', 'relationship': {'source_entity': 'deterministic algorithm', 'target_entity': 'read/write registers', 'description': 'Operates with read/write registers.'}}, {'entity_name': 'read/write registers', 'entity_type': 'Data Structure', 'entity_description': 'Registers that allow reading and writing of data.', 'relationship': {'source_entity': 'read/write registers', 'target_entity': 'more powerful registers', 'description': 'Can be enhanced to more powerful registers.'}}, {'entity_name': 'more powerful registers', 'entity_type': 'Data Structure', 'entity_description': 'Registers that have enhanced capabilities compared to standard registers.', 'relationship': {'source_entity': 'more powerful registers', 'target_entity': 'objects', 'description': 'Often referred to as objects.'}}, {'entity_name': 'objects', 'entity_type': 'Concept', 'entity_description': 'Abstract data types that encapsulate data and behavior.', 'relationship': {'source_entity': 'objects', 'target_entity': 'shared objects', 'description': 'Emphasizes their shared nature.'}}, {'entity_name': 'shared objects', 'entity_type': 'Concept', 'entity_description': 'Objects that can be accessed by multiple processes.', 'relationship': {'source_entity': 'shared objects', 'target_entity': 'more powerful registers', 'description': 'Represent a type of more powerful registers.'}}, {'entity_name': 'processor 1', 'entity_type': 'Processor', 'entity_description': 'The first processor involved in message transmission.', 'relationship': {'source_entity': 'processor 1', 'target_entity': 'processor 2', 'description': 'Sends a message to'}}, {'entity_name': 'processor 2', 'entity_type': 'Processor', 'entity_description': 'The second processor that receives messages.', 'relationship': {'source_entity': 'processor 2', 'target_entity': 'processor 1', 'description': 'Receives a message from'}}, {'entity_name': 'wedge', 'entity_type': 'Component', 'entity_description': 'A structure that facilitates message transmission between processors.', 'relationship': {'source_entity': 'wedge', 'target_entity': 'processor 1', 'description': 'Sends a message from'}}, {'entity_name': 'tiles', 'entity_type': 'Component', 'entity_description': 'Colored elements that represent the in-buffer and facilitate message transmission.', 'relationship': {'source_entity': 'tiles', 'target_entity': 'processor 1', 'description': 'Used to simulate message transmission from'}}, {'entity_name': 'Figure 3', 'entity_type': 'Figure', 'entity_description': 'A visual representation that describes the simulation setup.', 'relationship': {'source_entity': 'Figure 3', 'target_entity': 'wedge', 'description': 'Describes the function of the wedge in the simulation.'}}, {'entity_name': 'CofMall', 'entity_type': 'Configuration', 'entity_description': 'A configuration in which processes have halted.', 'relationship': {'source_entity': 'CofMall', 'target_entity': 'h(C)', 'description': 'Leads to a terminal state.'}}, {'entity_name': 'h(C)', 'entity_type': 'Configuration', 'entity_description': 'A configuration that is terminal with no further locations for tiles to bind stably.', 'relationship': {'source_entity': 'h(C)', 'target_entity': 'h12', 'description': 'Represents a state in the simulation.'}}, {'entity_name': 'h12', 'entity_type': 'Configuration', 'entity_description': 'A specific configuration in the simulation.', 'relationship': {'source_entity': 'h12', 'target_entity': 'm1', 'description': 'Interacts with message m1.'}}, {'entity_name': 'm1', 'entity_type': 'Message', 'entity_description': 'A message in the simulation.', 'relationship': {'source_entity': 'm1', 'target_entity': 'h12', 'description': 'Binds to configuration h12.'}}, {'entity_name': 'Tile Assembly Model', 'entity_type': 'Model', 'entity_description': 'A model that describes the process of assembling tiles in a random manner.', 'relationship': {'source_entity': 'Tile Assembly Model', 'target_entity': 'tile', 'description': 'Assumes that the tile is chosen uniformly at random.'}}, {'entity_name': 'tile', 'entity_type': 'Object', 'entity_description': 'A component used in the assembly process.', 'relationship': {'source_entity': 'tile', 'target_entity': 'location', 'description': 'Binds to a location uniformly at random.'}}, {'entity_name': 'location', 'entity_type': 'Object', 'entity_description': 'The place where a tile binds during assembly.', 'relationship': {'source_entity': 'location', 'target_entity': 'row', 'description': 'Tiles are used to build one row of a wedge.'}}, {'entity_name': 'row', 'entity_type': 'Structure', 'entity_description': 'A horizontal line of tiles in the assembly.', 'relationship': {'source_entity': 'row', 'target_entity': 'message', 'description': 'One tile propagates a message up one row.'}}, {'entity_name': 'message', 'entity_type': 'Information', 'entity_description': 'A piece of information that is propagated through the rows.', 'relationship': {'source_entity': 'message', 'target_entity': 'inbuffer row', 'description': 'Incorporates information into the inbuffer row.'}}, {'entity_name': 'inbuffer row', 'entity_type': 'Structure', 'entity_description': 'A row that receives incorporated information from the message.', 'relationship': {'source_entity': 'inbuffer row', 'target_entity': 'frontier', 'description': 'The message is delivered closer to the frontier.'}}, {'entity_name': 'p1', 'entity_type': 'Process', 'entity_description': 'A process that writes to the 2-consensus object.'}, {'entity_name': 'p2', 'entity_type': 'Process', 'entity_description': 'Another process that writes to the 2-consensus object.'}, {'entity_name': '2-consensus object', 'entity_type': 'Object', 'entity_description': 'An object that achieves consensus between processes p1 and p2.'}, {'entity_name': 'tiles', 'entity_type': 'Structure', 'entity_description': 'Rays of tiles built from processes p1 and p2 to simulate their writes.'}, {'entity_name': 'acks', 'entity_type': 'Message', 'entity_description': 'Acknowledgments received by processes p1 and p2 after their writes conclude.'}, {'entity_name': 'tile assembly system', 'entity_type': 'System', 'entity_description': 'A system that simulates a distributed system.'}, {'entity_name': 'distributed system', 'entity_type': 'System', 'entity_description': 'A system composed of multiple processes that communicate and coordinate.'}, {'relationship': {'source_entity': 'p1', 'target_entity': '2-consensus object', 'description': 'Writes to'}}, {'relationship': {'source_entity': 'p2', 'target_entity': '2-consensus object', 'description': 'Writes to'}}, {'relationship': {'source_entity': 'p1', 'target_entity': 'acks', 'description': 'Receives after writes conclude'}}, {'relationship': {'source_entity': 'p2', 'target_entity': 'acks', 'description': 'Receives after writes conclude'}}, {'relationship': {'source_entity': 'tiles', 'target_entity': 'p1', 'description': 'Simulates writes from'}}, {'relationship': {'source_entity': 'tiles', 'target_entity': 'p2', 'description': 'Simulates writes from'}}, {'entity_name': '2-consensus', 'entity_type': 'Concept', 'entity_description': 'A consensus problem that requires agreement among processes in a distributed system without waiting.', 'relationship': {'source_entity': '2-consensus', 'target_entity': 'tile assembly system', 'description': 'Simulated by a two-dimensional tile assembly system.'}}, {'entity_name': 'tile assembly system', 'entity_type': 'System', 'entity_description': 'A computational model used to simulate the assembly of tiles to solve problems.', 'relationship': {'source_entity': 'tile assembly system', 'target_entity': 'shared objects', 'description': 'Used to simulate shared objects that solve wait-free consensus problems.'}}, {'entity_name': 'shared objects', 'entity_type': 'Concept', 'entity_description': 'Data structures that can be accessed and modified by multiple processes in a concurrent system.', 'relationship': {'source_entity': 'shared objects', 'target_entity': 'wait-free consensus problems', 'description': 'Solve wait-free consensus problems.'}}, {'entity_name': 'wait-free consensus problems', 'entity_type': 'Concept', 'entity_description': 'Problems that require processes to reach consensus without waiting for others to respond.', 'relationship': {'source_entity': 'wait-free consensus problems', 'target_entity': 'tile assembly system', 'description': 'Simulated by a tile assembly system.'}}, {'entity_name': 'modules', 'entity_type': 'Concept', 'entity_description': 'Subassemblies within the tile assembly system that perform specific functions.', 'relationship': {'source_entity': 'modules', 'target_entity': 'tile assembly system', 'description': 'Components of the tile assembly system.'}}, {'entity_name': 'p1', 'entity_type': 'Process', 'entity_description': 'A process involved in the 2-consensus simulation.', 'relationship': {'source_entity': 'p1', 'target_entity': 'modules', 'description': 'Simulated by one of the modules in the tile assembly system.'}}, {'entity_name': 'wedge', 'entity_type': 'Structure', 'entity_description': 'A geometric shape used in the simulation to represent a computational model.', 'relationship': {'source_entity': 'wedge', 'target_entity': 'halting tile', 'description': 'Binds to the base of the wedge as a marker that the simulation has halted.'}}, {'entity_name': 'halting tile', 'entity_type': 'Marker', 'entity_description': 'A special tile that indicates the simulation has stopped.', 'relationship': {'source_entity': 'halting tile', 'target_entity': 'wedge', 'description': 'Binds to the base of the wedge.'}}, {'entity_name': 'processors', 'entity_type': 'Computational Unit', 'entity_description': 'Two processors capable of sending messages to each other.', 'relationship': {'source_entity': 'processors', 'target_entity': 'messages', 'description': 'Capable of sending each other messages.'}}, {'entity_name': 'input buffer', 'entity_type': 'Data Structure', 'entity_description': 'A buffer that receives incoming messages in the simulation.', 'relationship': {'source_entity': 'input buffer', 'target_entity': 'output buffer', 'description': 'Added to the construction to facilitate message passing.'}}, {'entity_name': 'output buffer', 'entity_type': 'Data Structure', 'entity_description': 'A buffer that sends outgoing messages in the simulation.', 'relationship': {'source_entity': 'output buffer', 'target_entity': 'processors', 'description': 'Works in conjunction with the input buffer to simulate message passing.'}}, {'entity_name': "Winfree's original construction", 'entity_type': 'Algorithm', 'entity_description': 'The foundational model that is modified to simulate message passing between processors.', 'relationship': {'source_entity': "Winfree's original construction", 'target_entity': 'processors', 'description': 'Modified to simulate two processors capable of sending messages.'}}, {'entity_name': 'Tile assembly system T', 'entity_type': 'System', 'entity_description': 'A system that simulates distributed system M.', 'relationship': {'source_entity': 'Tile assembly system T', 'target_entity': 'distributed system M', 'description': 'Simulates'}}, {'entity_name': 'distributed system M', 'entity_type': 'System', 'entity_description': 'A distributed system that is being simulated by the tile assembly system T.', 'relationship': {'source_entity': 'distributed system M', 'target_entity': 'stable tile configurations of T', 'description': 'Has a 1-1 mapping to'}}, {'entity_name': 'C0', 'entity_type': 'Configuration', 'entity_description': 'A configuration in the distributed system M.', 'relationship': {'source_entity': 'C0', 'target_entity': 'C1', 'description': 'Is part of a legal execution segment in M.'}}, {'entity_name': 'C1', 'entity_type': 'Configuration', 'entity_description': 'A configuration in the distributed system M.', 'relationship': {'source_entity': 'C1', 'target_entity': 'Ci', 'description': 'Is part of a legal execution segment in M.'}}, {'entity_name': 'Ci', 'entity_type': 'Configuration', 'entity_description': 'A configuration in the distributed system M.', 'relationship': {'source_entity': 'C0', 'target_entity': 'Ci', 'description': 'Is part of a legal execution segment in M.'}}, {'entity_name': 'h(C0)', 'entity_type': 'Mapping', 'entity_description': 'The mapping of configuration C0 in the tile assembly system T.', 'relationship': {'source_entity': 'h(C0)', 'target_entity': 'h(C1)', 'description': 'Leads to a legal tile assembly sequence in T.'}}, {'entity_name': 'h(C1)', 'entity_type': 'Mapping', 'entity_description': 'The mapping of configuration C1 in the tile assembly system T.', 'relationship': {'source_entity': 'h(C1)', 'target_entity': 'h(Ci)', 'description': 'Leads to a legal tile assembly sequence in T.'}}, {'entity_name': 'C', 'entity_type': 'Configuration', 'entity_description': 'A configuration in the distributed system M.', 'relationship': {'source_entity': 'C', 'target_entity': 'set of configurations of M', 'description': 'Is a set of configurations in M.'}}, {'entity_name': 'M', 'entity_type': 'Model', 'entity_description': 'A two-processor message-passing model of distributed computing.', 'relationship': {'source_entity': 'M', 'target_entity': 'T', 'description': 'Simulates the tile assembly system.'}}, {'entity_name': 'T', 'entity_type': 'Tile Assembly System', 'entity_description': 'A tile assembly system in the standard Winfree-Rothemund Tile Assembly Model.', 'relationship': {'source_entity': 'T', 'target_entity': 'Min', 'description': 'Simulates in two dimensions.'}}, {'entity_name': 'p1', 'entity_type': 'Processor', 'entity_description': 'One of the two processors in the message-passing model.', 'relationship': {'source_entity': 'p1', 'target_entity': 'p2', 'description': 'Sends messages to.'}}, {'entity_name': 'p2', 'entity_type': 'Processor', 'entity_description': 'The second processor in the message-passing model.', 'relationship': {'source_entity': 'p2', 'target_entity': 'p1', 'description': 'Receives messages from.'}}, {'entity_name': 'k', 'entity_type': 'Constant', 'entity_description': 'A constant that bounds the size of messages sent between processors.', 'relationship': {'source_entity': 'p1', 'target_entity': 'p2', 'description': 'Messages are of size bounded by.'}}, {'entity_name': 'Winfree', 'entity_type': 'Person', 'entity_description': 'A researcher who has shown that the Tile Assembly Model is Turing Universal.', 'relationship': {'source_entity': 'Winfree', 'target_entity': 'Tile Assembly Model', 'description': 'Demonstrated its Turing Universality.'}}, {'entity_name': 'M', 'entity_type': 'System', 'entity_description': 'A system that can achieve various configurations.', 'relationship': {'source_entity': 'M', 'target_entity': 'C', 'description': 'Has configurations.'}}, {'entity_name': 'C', 'entity_type': 'Configuration', 'entity_description': 'A specific configuration of the system M.', 'relationship': {'source_entity': 'C', 'target_entity': 'C0', 'description': 'Can lead to other configurations.'}}, {'entity_name': 'C0', 'entity_type': 'Configuration', 'entity_description': 'A configuration that can be achieved from C.', 'relationship': {'source_entity': 'C0', 'target_entity': 'C', 'description': 'Is part of the set of configurations.'}}, {'entity_name': 'T', 'entity_type': 'Process', 'entity_description': 'A process that interacts with configurations.', 'relationship': {'source_entity': 'T', 'target_entity': 'h(C)', 'description': 'Must achieve h(C0) if it reaches h(C).'}}, {'entity_name': 'h(C)', 'entity_type': 'Function', 'entity_description': 'A function that maps configuration C to another state.', 'relationship': {'source_entity': 'h(C)', 'target_entity': 'h(C0)', 'description': 'Must achieve h(C0) for some C0 unless blocked.'}}, {'entity_name': 'tile blockage', 'entity_type': 'Event', 'entity_description': 'An event that prevents the achievement of configurations.', 'relationship': {'source_entity': 'tile blockage', 'target_entity': 'T', 'description': 'Can prevent T from achieving h(C0).'}}, {'entity_name': 'C0', 'entity_type': 'Configuration', 'entity_description': 'A configuration involved in a legal execution segment.', 'relationship': {'source_entity': 'C0', 'target_entity': 'C1', 'description': 'Is part of a legal execution segment.'}}, {'entity_name': 'C1', 'entity_type': 'Configuration', 'entity_description': 'Another configuration in the legal execution segment.', 'relationship': {'source_entity': 'C1', 'target_entity': 'C0', 'description': 'Contains more tile blockage binding errors than C0.'}}, {'entity_name': '\x1e0', 'entity_type': 'Event', 'entity_description': 'An event representing the crash failure of a process.', 'relationship': {'source_entity': '\x1e0', 'target_entity': 'C1', 'description': 'Is associated with the crash failure affecting C1.'}}]