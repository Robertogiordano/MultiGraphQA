{'summarized_nodes': [{'title': 'Bayesian Quadrature', 'summary': 'A statistical method for numerical integration that uses Bayesian inference to provide a mean estimate and a full Gaussian posterior distribution. It minimizes an objective related to sampling and integration in Bayesian statistics.', 'original_ids': ['Bayesian quadrature'], 'type': 'Method', 'keywords': ['Bayesian', 'integration', 'posterior']}, {'title': 'Kernel Herding', 'summary': 'A sampling method that aims to minimize a specific objective function, improving upon i.i.d. sampling by replacing uniform weights with optimal weights. It is compared with other methods like sbq in terms of sample selection.', 'original_ids': ['kernel herding', 'sbq'], 'type': 'Method', 'keywords': ['sampling', 'optimization', 'weights']}, {'title': 'Gaussian Process', 'summary': 'A collection of random variables with a joint Gaussian distribution, used in Bayesian statistics and optimal experimental design. It is related to posterior variance and Bayesian quadrature.', 'original_ids': ['Gaussian process', 'GP'], 'type': 'Statistical Model', 'keywords': ['Gaussian', 'random variables', 'Bayesian']}, {'title': 'Posterior Variance', 'summary': 'A measure of uncertainty in Bayesian statistics, particularly under a Gaussian process. It quantifies uncertainty in estimates and is minimized when selecting locations for evaluating functions.', 'original_ids': ['posterior variance', 'Zf;p'], 'type': 'Statistical Measure', 'keywords': ['uncertainty', 'Bayesian', 'estimation']}, {'title': 'MMD', 'summary': 'Maximum Mean Discrepancy, a statistical measure used to compare distributions and evaluate the performance of sampling methods. It provides an upper bound on estimation error.', 'original_ids': ['MMD'], 'type': 'Statistical Measure', 'keywords': ['discrepancy', 'sampling', 'error']}, {'title': 'Submodular Function', 'summary': 'A type of set function that exhibits diminishing returns, meaning that adding an element to a smaller set has a larger relative effect than adding it to a larger set. Greedy algorithms are used to optimize these functions.', 'original_ids': ['weakly submodular set function', 'submodular function'], 'type': 'Mathematical Concept', 'keywords': ['submodularity', 'greedy', 'optimization']}, {'title': 'Herding', 'summary': 'A sampling method that aims to approximate a target distribution by iteratively selecting points, utilizing super-samples to avoid well-represented regions. It is compared with other methods like sbq.', 'original_ids': ['herding', 'bqsat'], 'type': 'Method', 'keywords': ['sampling', 'approximation', 'super-samples']}, {'title': 'RKHS', 'summary': 'Reproducing Kernel Hilbert Space, a framework used in machine learning and statistics for function approximation. It corresponds to the kernel used in various algorithms.', 'original_ids': ['RKHS'], 'type': 'Mathematical Space', 'keywords': ['kernel', 'function approximation', 'machine learning']}, {'title': 'Empirical Error', 'summary': 'The error calculated from observed data as opposed to theoretical predictions, often evaluated in relation to the number of samples.', 'original_ids': ['empirical error'], 'type': 'Statistical Measure', 'keywords': ['error', 'observed data', 'samples']}], 'summarized_relationships': [{'source': 'Bayesian Quadrature', 'target': 'Posterior Variance', 'relation_type': 'PROVIDES', 'weight': 3, 'original_relationships': ['Bayesian quadrature->Zf;p(PROVIDES)', 'Bayesian quadrature->posterior variance(RELATED)']}, {'source': 'Kernel Herding', 'target': 'Bayesian Quadrature', 'relation_type': 'MINIMIZES', 'weight': 2, 'original_relationships': ['kernel herding->Bayesian quadrature(MINIMIZES)']}, {'source': 'Gaussian Process', 'target': 'Posterior Variance', 'relation_type': 'INTERPRETED_AS', 'weight': 2, 'original_relationships': ['Gaussian process->posterior variance(INTERPRETED_AS)']}, {'source': 'Herding', 'target': 'Kernel Herding', 'relation_type': 'COMPARED_WITH', 'weight': 3, 'original_relationships': ['herding->kernel herding(COMPARED_WITH)']}, {'source': 'MMD', 'target': 'Empirical Error', 'relation_type': 'IMPLIES', 'weight': 2, 'original_relationships': ['MMD->empirical error(IMPLIES)']}, {'source': 'Submodular Function', 'target': 'Greedy Algorithms', 'relation_type': 'OPTIMIZED_BY', 'weight': 2, 'original_relationships': ['submodular function->greedy algorithms(OPTIMIZED_BY)']}, {'source': 'RKHS', 'target': 'Kernel Methods', 'relation_type': 'USED_IN', 'weight': 2, 'original_relationships': ['RKHS->kernel methods(USED_IN)']}]}